{"version":3,"sources":["alert.mp3","components/NavbarComponent.js","components/CountdownComponent.js","components/PlayResetComponent.js","components/CountersComponent.js","components/ClockComponent.js","App.js","index.js"],"names":["module","exports","Navbar","AppBar","position","Toolbar","edge","color","aria-label","Typography","variant","Countdown","timer","countdown","breaker","play","setCountdown","useState","playBreaker","setPlayBreaker","showTimer","setShowTimer","useSound","alert","playAlert","useEffect","interval","setInterval","prevTimer","clearInterval","setTimeout","normalise","total","text","Grid","container","justify","style","marginTop","Paper","elevation","width","textAlign","id","time","minutes","Math","floor","seconds","str_pad_left","string","pad","length","Array","join","slice","convert","LinearProgress","value","PlayReset","setPlay","handleReset","CardActions","direction","alignItems","Button","onClick","PauseCircleFilled","PlayCircleFilled","UpdateRounded","Counters","disableBtn","setTimer","setBreak","activeTimer","ButtonGroup","AddCircleOutline","RemoveCircleOutline","activeBreak","prevBreak","disabledButtons","disabled","flexGrow","spacing","item","md","Clock","setDisableBtn","Card","CardContent","App","className","Container","fixed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c6178d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.dd11f139.mp3\";","import React from 'react';\r\nimport { AppBar, Typography, Toolbar } from '@material-ui/core';\r\n\r\nfunction Navbar() {\r\n\treturn (\r\n\t\t<AppBar position='static'>\r\n\t\t\t<Toolbar edge='start' color='palette.success' aria-label='Navbar'>\r\n\t\t\t\t<Typography variant='h5'>Time Me!</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Paper, Grid, Typography, LinearProgress } from '@material-ui/core';\r\nimport useSound from 'use-sound';\r\nimport alert from '../alert.mp3';\r\n\r\nexport default function Countdown({ timer, countdown, breaker, play, setCountdown }) {\r\n\tconst [ playBreaker, setPlayBreaker ] = useState(false);\r\n\tconst [ showTimer, setShowTimer ] = useState(false);\r\n\tconst [ playAlert ] = useSound(alert);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (play) {\r\n\t\t\t\tvar interval = setInterval(() => {\r\n\t\t\t\t\tsetCountdown((prevTimer) => prevTimer - 1);\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t\treturn () => clearInterval(interval);\r\n\t\t},\r\n\t\t[ play, playBreaker, setCountdown ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (playBreaker && countdown < 0) {\r\n\t\t\t\tsetCountdown(timer * 60);\r\n\t\t\t\tsetPlayBreaker(false);\r\n\t\t\t\tsetShowTimer(true);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetShowTimer(false);\r\n\t\t\t\t}, 2000);\r\n\t\t\t\tplayAlert();\r\n\t\t\t} else if (!playBreaker && countdown < 0) {\r\n\t\t\t\tsetCountdown(breaker * 60);\r\n\t\t\t\tsetPlayBreaker(true);\r\n\t\t\t\tsetShowTimer(true);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetShowTimer(false);\r\n\t\t\t\t}, 2000);\r\n\t\t\t\tplayAlert();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ countdown, setCountdown, playBreaker, breaker, timer, playAlert ]\r\n\t);\r\n\r\n\tconst convert = (time) => {\r\n\t\tlet minutes = Math.floor(time / 60);\r\n\t\tlet seconds = time - minutes * 60;\r\n\t\tfunction str_pad_left(string, pad, length) {\r\n\t\t\treturn (new Array(length + 1).join(pad) + string).slice(-length);\r\n\t\t}\r\n\t\tlet finalTime = str_pad_left(minutes, '0', 2) + ':' + str_pad_left(seconds, '0', 2);\r\n\t\treturn finalTime;\r\n\t};\r\n\r\n\tconst normalise = (countdown, total) => 100 * countdown / (total * 60);\r\n\tconst text = !playBreaker ? 'Session Started' : 'Break Started';\r\n\r\n\treturn (\r\n\t\t<Grid container justify='center' style={{ marginTop: '3vh' }}>\r\n\t\t\t<Paper elevation={3} style={{ width: '100%', textAlign: 'center' }}>\r\n\t\t\t\t<Typography id='time-left' variant='h1'>\r\n\t\t\t\t\t{convert(countdown)}\r\n\t\t\t\t</Typography>\r\n\r\n\t\t\t\t{showTimer && (\r\n\t\t\t\t\t<Typography id='timer-label' variant='h4'>\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{!playBreaker ? (\r\n\t\t\t\t\t<LinearProgress variant='determinate' value={normalise(countdown, timer)} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<LinearProgress variant='determinate' value={normalise(countdown, breaker)} />\r\n\t\t\t\t)}\r\n\t\t\t</Paper>\r\n\t\t\t{/*React @useSound hook used instead of HTML5 audio element*/}\r\n\t\t\t<p id='beep' />\r\n\t\t</Grid>\r\n\t);\r\n}\r\n","import React from 'react'\r\nimport { CardActions, Grid, Button } from '@material-ui/core'\r\nimport { PlayCircleFilled, PauseCircleFilled, UpdateRounded } from '@material-ui/icons'\r\n\r\nexport default function PlayReset({play, setPlay, handleReset}) {\r\n\r\n    return (\r\n        <CardActions>\r\n                    <Grid container\r\n                        direction=\"row\"\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"baseline\"\r\n                    > \r\n\r\n                        <Button id='start_stop' onClick= { ()=> { setPlay(!play) } } >\r\n                            {!play ? \r\n                                <PlayCircleFilled color='primary'/>\r\n                            :\r\n                                <PauseCircleFilled color='primary'/>\r\n                            }\r\n                        </Button>\r\n                        <Button id='reset'>\r\n                            <UpdateRounded color='primary' onClick={ () => handleReset() }/>\r\n                        </Button>\r\n                    </Grid>\r\n                </CardActions>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Button, ButtonGroup, Typography, Grid, Paper } from '@material-ui/core';\r\nimport { AddCircleOutline, RemoveCircleOutline } from '@material-ui/icons';\r\n\r\nfunction Counters({ disableBtn, timer, setTimer, breaker, setBreak }) {\r\n\tconst activeTimer = (\r\n\t\t<ButtonGroup variant='contained' color='primary' aria-label='session-label' style={{ marginTop: '1vh' }}>\r\n\t\t\t<Button id='session-increment' onClick={() => setTimer((prevTimer) => prevTimer + 1)}>\r\n\t\t\t\t<AddCircleOutline />\r\n\t\t\t</Button>\r\n\t\t\t{timer < 1 ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<Button id='session-decrement' onClick={() => setTimer((prevTimer) => prevTimer - 1)}>\r\n\t\t\t\t\t<RemoveCircleOutline />\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</ButtonGroup>\r\n\t);\r\n\r\n\tconst activeBreak = (\r\n\t\t<ButtonGroup variant='contained' color='primary' aria-label='break-label' style={{ marginTop: '1vh' }}>\r\n\t\t\t{breaker > 59 ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<Button id='break-increment' onClick={() => setBreak((prevBreak) => prevBreak + 1)}>\r\n\t\t\t\t\t<AddCircleOutline />\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t\t{breaker < 1 ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<Button id='break-decrement' onClick={() => setBreak((prevBreak) => prevBreak - 1)}>\r\n\t\t\t\t\t<RemoveCircleOutline />\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</ButtonGroup>\r\n\t);\r\n\r\n\tconst disabledButtons = (\r\n\t\t<ButtonGroup variant='contained' color='primary' aria-label='session-label' style={{ marginTop: '1vh' }}>\r\n\t\t\t<Button disabled>\r\n\t\t\t\t<AddCircleOutline />{' '}\r\n\t\t\t</Button>\r\n\t\t\t<Button disabled>\r\n\t\t\t\t<RemoveCircleOutline />{' '}\r\n\t\t\t</Button>\r\n\t\t</ButtonGroup>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div id='counters' style={{ flexGrow: 1 }}>\r\n\t\t\t<Grid container justify='center' spacing={2}>\r\n\t\t\t\t<Grid item md={5} id='session-label'>\r\n\t\t\t\t\t<Grid container direction='column' justify='center' alignItems='center'>\r\n\t\t\t\t\t\t<Typography variant='h6'>Set Timer</Typography>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\tid='session-length'\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\televation={3}\r\n\t\t\t\t\t\t\tstyle={{ width: '50%', textAlign: 'center' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>{timer}</Typography>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t{!disableBtn ? activeTimer : disabledButtons}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item md={5} id='break-label'>\r\n\t\t\t\t\t<Grid container direction='column' justify='center' alignItems='center'>\r\n\t\t\t\t\t\t<Typography variant='h6'>Set Break</Typography>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\tid='break-length'\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\televation={3}\r\n\t\t\t\t\t\t\tstyle={{ width: '50%', textAlign: 'center' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Typography variant='h4'>{breaker}</Typography>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t{!disableBtn ? activeBreak : disabledButtons}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Counters;\r\n","import React, {useState, useEffect} from 'react'\r\nimport Countdown from './CountdownComponent'\r\nimport PlayReset from './PlayResetComponent'\r\nimport Counters from './CountersComponent'\r\nimport {Card, CardContent } from '@material-ui/core'\r\n\r\n\r\nexport default function Clock() {\r\n    const [timer, setTimer] = useState(25)\r\n    const [breaker, setBreak] = useState(5)\r\n    const [play, setPlay] = useState(false)  \r\n    const [countdown, setCountdown] = useState()\r\n    const [disableBtn, setDisableBtn] = useState(false)\r\n\r\n    const handleReset = () => {\r\n        setCountdown(timer)\r\n        setTimer(25)\r\n        setBreak(5)\r\n        setPlay(false)\r\n        setDisableBtn(false)\r\n    }\r\n\r\n    useEffect( () => {\r\n        setCountdown(timer*60);\r\n    }, [timer]);\r\n\r\n    useEffect( () => {\r\n        play && setDisableBtn(true);\r\n    }, [play])\r\n\r\n    return (\r\n        <>\r\n            <Card style={{marginTop: '3vh'}}>\r\n                <CardContent>\r\n                    <Counters disableBtn = {disableBtn} timer={timer} setTimer={setTimer} breaker={breaker} setBreak={setBreak} />\r\n                    <Countdown timer = {timer} countdown={countdown} breaker={breaker} play={play} setCountdown={setCountdown} />\r\n                </CardContent>\r\n                <PlayReset play={play} setPlay={setPlay} handleReset={handleReset} />\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport Navbar from './components/NavbarComponent';\nimport Clock from './components/ClockComponent';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Navbar />\n\t\t\t<Container fixed>\n\t\t\t\t<Clock />\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport index from './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}